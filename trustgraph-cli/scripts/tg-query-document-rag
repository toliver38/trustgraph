#!/usr/bin/env python3

"""
Uses the Document RAG service to answer a query
"""

import argparse
import os
from trustgraph.clients.document_rag_client import DocumentRagClient

default_pulsar_host = os.getenv("PULSAR_HOST", 'pulsar://localhost:6650')
default_pulsar_api_key = os.getenv("PULSAR_API_KEY", None)

default_user = 'trustgraph'
default_collection = 'default'

def query(pulsar_host, query, user, collection, pulsar_api_key=None):

    rag = DocumentRagClient(pulsar_host=pulsar_host, pulsar_api_key=pulsar_api_key)
    resp = rag.request(user=user, collection=collection, query=query)
    print(resp)

def main():

    parser = argparse.ArgumentParser(
        prog='tg-query-document-rag',
        description=__doc__,
    )

    parser.add_argument(
        '-p', '--pulsar-host',
        default=default_pulsar_host,
        help=f'Pulsar host (default: {default_pulsar_host})',
    )
    
    parser.add_argument(
        '--pulsar-api-key',
        default=default_pulsar_api_key,
        help=f'Pulsar API key',
    )
    parser.add_argument(
        '-q', '--query',
        required=True,
        help=f'Query to execute',
    )

    parser.add_argument(
        '-u', '--user',
        default=default_user,
        help=f'User ID (default: {default_user})'
    )

    parser.add_argument(
        '-c', '--collection',
        default=default_collection,
        help=f'Collection ID (default: {default_collection})'
    )

    args = parser.parse_args()

    try:

        query(
            pulsar_host=args.pulsar_host,
            pulsar_api_key=args.pulsar_api_key,
            query=args.query,
            user=args.user,
            collection=args.collection,
        )

    except Exception as e:

        print("Exception:", e, flush=True)

main()

